from pathlib import Path

configfile: "config.yaml"

fastas = Path(f"{config['output_dir']}/fastas")

def get_all_cluster_names():
    all_msas = []
    for file in fastas.iterdir():
        if file.name.endswith(".fa"):
            all_msas.append(file.with_suffix("").name)
    return all_msas


rule all:
    input: [f"{config['output_dir']}/msas/{cluster}.msa.fa" for cluster in get_all_cluster_names()]


rule build_MSAs:
    input:
        fasta = f"{config['output_dir']}/fastas/{{locus}}.fa"
    output:
        msa = f"{config['output_dir']}/msas/{{locus}}.msa.fa"
    threads: 1
    resources:
        mem_mb=lambda wildcards, attempt: {1: 4000, 2: 8000, 3: 16000}.get(attempt,32000)
    log:
        "logs/build_MSAs/{locus}.log"
    shell: """
        nb_of_seqs=`grep "^>" {input.fasta} | wc -l`
        if [ "$nb_of_seqs" -eq 1 ]
        then
            cp {input.fasta} {output.msa}
        else
            mafft --auto --quiet --thread 1 {input.fasta} > {output.msa}
        fi
        """